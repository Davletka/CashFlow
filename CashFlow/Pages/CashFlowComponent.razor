@using Google.Apis;
@using CashFlow.Data;
@using Google.Apis.Auth.OAuth2
@using Google.Apis.Sheets.v4
@using Google.Apis.Sheets.v4.Data

@page "/cashflow"

<form>
  <div class="row mb-4">
    <div class="col">
      <div class="form-outline">
        <label class="form-label" for="form6Example1">Приход/Расход</label>
        <select class="form-control" @bind="IncomeExpense_">
         <option></option>     
            @for (int i = 1; i < @valuesdata[1].Count; i++)
            {
                @if (@valuesdata[@i][1] != "")
                {
                    <option value="@valuesdata[@i][1]">@valuesdata[@i][1]</option>    
                }
            }
        </select>
      </div>
    </div>
    <div class="col">
      <div class="form-outline">
        <label class="form-label">Сумма</label>
        <input type="number" id="form6Example2" class="form-control" @bind-value="Sum_"/>
      </div>
    </div>
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example3">Что?</label>
        <select class="form-control" @bind="What_">
         <option></option>
            @for (int i = 1; i < valuesdata[2].Count; i++)
            {
                @if (valuesdata[@i][2] != "")
                {
                    <option value="@valuesdata[@i][2]">@valuesdata[@i][2]</option>    
                }
            }
        </select>
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example4">Комментарий</label>
    <input type="text" id="form6Example4" class="form-control" @bind-value="Comment" />
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example5">Сотрудник</label>
        <select class="form-control" @bind="Employee_">
         <option></option>
            @for (int i = 1; i < valuesdata[4].Count; i++)
            {
                @if (valuesdata[@i][4] != "")
                {
                    <option value="@valuesdata[@i][4]">@valuesdata[@i][4]</option>    
                }
            }
        </select>
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example6">За какой месяц?</label>
        <select class="form-control" @bind="Month_">
         <option></option>
            @for (int i = 1; i < valuesdata[8].Count; i++)
            {
                @if (valuesdata[@i][8] != "")
                {
                    <option value="@valuesdata[@i][8]">@valuesdata[@i][8]</option>    
                }
            }
        </select>
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example7">Дата</label>
    <input type="date" id="form6Example7" class="form-control" @bind-value="Date_" />
  </div>

  <div class="form-outline mb-4">
    <label class="form-label" for="form6Example7">Фонд</label>
        <select class="form-control" @bind="Fund_">
         <option></option>
            @for (int i = 1; i < valuesdata[0].Count; i++)
            {
                @if (valuesdata[@i][0] != "")
                {
                    <option value="@valuesdata[@i][0]">@valuesdata[@i][0]</option>    
                }
            }
        </select>
  </div>

    <div class="form-outline mb-4">
    <label class="form-label" for="form6Example7">Месяц По порядку</label>
        <select class="form-control" @bind="MonthInOrder_">
         <option></option>
            @for (int i = 1; i < valuesdata[9].Count; i++)
            {
                @if (valuesdata[@i][9] != "")
                {
                    <option value="@valuesdata[@i][9]">@valuesdata[@i][9]</option>    
                }
            }
        </select>
  </div>

  <button type="button" class="btn btn-primary" @onclick="SubmitData">Отправить</button>
  <button type="sumbit" class="btn btn-primary">Очистить</button>

</form>

  @if (Check == true)
    {
        <h2>@Message</h2>
    }

@code {
    private string IncomeExpense_;
    private string Sum_;
    private string What_;
    private string Comment;
    private string Employee_;
    private string Month_;
    private DateTime Date_  = DateTime.Now;
    private int month_ = DateTime.Now.Month;

    private string Fund_;
    private int MonthInOrder_ = DateTime.Now.Month;

    private readonly string[] Scopes = { SheetsService.Scope.Spreadsheets };
    private readonly string ApplicationName = "OneMoreCopy";
    private readonly string SpreadsheetId = "1zJaeXqbMFXidC2YrB433hJU_NVQXikB3gsBS7VR32wQ";
    private readonly string sheet = "ДДС";
    private readonly string sheet1 = "Источники (списки)";

    private bool Check = false;
    private string Message;
    private static SheetsService service;
    private IList<IList<object>> valuesdata = new List<IList<object>>();


    protected override async Task OnInitializedAsync()
    {
        GoogleCredential credential;

        using (var stream = new FileStream("first-371421-a9ce403b6c0c.json", FileMode.Open, FileAccess.Read))
        {
            credential = GoogleCredential.FromStream(stream)
                .CreateScoped(Scopes);
        }

        service = new SheetsService(new Google.Apis.Services.BaseClientService.Initializer()
        {
            HttpClientInitializer = credential,
            ApplicationName = ApplicationName,
        });

        var range = $"{sheet1}!A:J";

        var request = service.Spreadsheets.Values.Get(SpreadsheetId, range);

        var responce = request.Execute();

        var values = responce.Values;

        foreach(var item in values)
        {
            if (item.Count != 17 )
            {
                valuesdata.Add(item); 
            }
            else
            {
                return;
            }

        }
    }

    private void SubmitData()
    {
        if (IncomeExpense_ != null && Sum_ != null && What_ != null && Employee_ != null && Month_ != null && Fund_ != null && MonthInOrder_ != null)
        {
            var range = $"{sheet}!A:J18";
            var valueRange = new ValueRange();

            var objectList = new List<object>() { IncomeExpense_, Sum_, What_, Comment, Employee_, Month_, Date_.ToString("dd.MM.yyyy"), Fund_, MonthInOrder_ };
            valueRange.Values = new List<IList<object>> { objectList };

            var appendRequest = service.Spreadsheets.Values.Append(valueRange, SpreadsheetId, range);
            appendRequest.ValueInputOption = SpreadsheetsResource.ValuesResource.AppendRequest.ValueInputOptionEnum.USERENTERED;

            var appendResponce = appendRequest.Execute();

            Check = true;
            Message = "Данные успешно отправились";
        }
        else
        {
            Check = true;
            Message = "Заполните нужные поля";
        }
    }

}